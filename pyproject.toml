[build-system]
build-backend = "uv_build"
requires = [ "uv-build>=0.9.2,<0.10" ]

[project]
name = "pyoekoboxonline"
version = "0.1.0a1"
description = "Python client for the Ã–kobox Online e-commerce API - food delivery and subscription services"
readme = "README.md"
keywords = [ "api", "client", "delivery", "ecommerce", "food", "oekobox", "subscription" ]
authors = [
  { name = "Simon Domke", email = "simon.domke@gmail.com" },
]
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Office/Business :: Financial :: Point-Of-Sale",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
  "httpx>=0.28",
]

urls."Bug Tracker" = "https://github.com/usimd/pyoekoboxonline/issues"
urls.Documentation = "https://github.com/usimd/pyoekoboxonline#readme"
urls.Homepage = "https://github.com/usimd/pyoekoboxonline"
urls.Repository = "https://github.com/usimd/pyoekoboxonline"

[dependency-groups]
dev = [
  "bandit>=1.8",
  "mypy>=1.13",
  "pre-commit>=4",
  "pytest>=8.4",
  "pytest-asyncio>=0.24",
  "pytest-cov>=6",
  "respx>=0.22",
  "ruff>=0.8",
]

[tool.ruff]
target-version = "py311"
line-length = 88

format.quote-style = "double"
lint.select = [
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "I",   # isort
  "Q",   # flake8-quotes
  "RUF", # ruff-specific rules
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "UP",  # pyupgrade
  "W",   # pycodestyle warnings
]
lint.ignore = [
  "E501", # line too long, handled by formatter
]
lint.isort.known-first-party = [ "pyoekoboxonline" ]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
testpaths = [ "tests" ]

[tool.coverage.run]
source = [ "src" ]
branch = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
